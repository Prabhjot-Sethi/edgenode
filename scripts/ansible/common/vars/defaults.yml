# Copyright 2019 Intel Corporation and Smart-Edge.com, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
base_path: "{{ '../../../.' | realpath }}"
centos_release: "7.6.1810"
centos_version: "7"
centos_rt_repo_gpg_file: "http://linuxsoft.cern.ch/cern/centos/7/os/x86_64/RPM-GPG-KEY-cern"
centos_rt_repo_file: "http://linuxsoft.cern.ch/cern/centos/{{ centos_version }}/rt/CentOS-RT.repo"
centos_rt_kernel_package_name: "kernel-rt-kvm"
centos_rt_kernel_package_version: "3.10.0-957.21.3.rt56.935.el7.x86_64"
centos_rt_kernel_grub_parameters: "hugepagesz=2M hugepages=5000 intel_iommu=on iommu=pt"
centos_rt_tuned_package_link: "ftp://ftp.icm.edu.pl/vol/rzm3/linux-slc/centos/7.5.1804/os/x86_64/Packages/tuned-2.9.0-1.el7.noarch.rpm"
epel_repository_package_link: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ centos_version }}.noarch.rpm"
dpdk_name: "dpdk-18.11.2"
dpdk_url: "http://fast.dpdk.org/rel/{{ dpdk_name }}.tar.xz"
dpdk_downloaddir: "/temp/dpdk_downloaddir"
dpdk_install_location: "/opt/{{ dpdk_name }}"
dpdk_make_target: "x86_64-native-linuxapp-gcc"
#
go_lang_version: "1.12.4"
go_lang_url: "https://dl.google.com/go/go{{ go_lang_version }}.linux-amd64.tar.gz"
docker_repo_file: "https://download.docker.com/linux/centos/docker-ce.repo"
docker_repo_gpg_file: "https://download.docker.com/linux/centos/gpg"
docker_legacy_packages: "docker,docker-client,docker-client-latest,docker-common,docker-latest,docker-latest-logrotate,docker-logrotate,docker-engine"
docker_packages: "docker-ce,docker-ce-cli,containerd.io"
#
qemu_name: "qemu-4.0.0"
qemu_url: "http://download.qemu.org/{{ qemu_name }}.tar.xz"
qemu_downloaddir: "/temp/qemu_downloaddir"
qemu_target_list: "x86_64-softmmu"
qemu_extract_relative_path: "../temp/qemu/"
#
ovs_version: "2.11.1"
ovs_url: "https://www.openvswitch.org/releases/openvswitch-{{ ovs_version }}.tar.gz"
ovs_downloaddir: "/temp/ovs_downloaddir"
ovs_install_location: "/opt/ovs-{{ ovs_version }}"
ovs_cores_hex: "0x4"
ovs_bridge_name: "br0"
ovs_socket_mem: "1024,0"
ovs_dpdk_build: "{{dpdk_install_location}}/{{dpdk_make_target}}/"
ovs:
  enabled: false
ovs_ports: []
#
kubernetes_repo_yum_gpg: "https://packages.cloud.google.com/yum/doc/yum-key.gpg"
kubernetes_repo_rpm_gpg: "https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg"
kubernetes_packages: "kubelet-1.16.2,kubeadm-1.16.2,kubectl-1.16.2,libvirt-python,python-lxml"
kubernetes_sysctl: "/etc/sysctl.d/k8s.conf"
kubernetes_kubeadm_conf: "/usr/lib/systemd/system/kubelet.service.d/10-kubeadm.conf"
kubernetes_join: ""
kubernetes:
  enabled: false
#
openvino_url: "http://registrationcenter-download.intel.com/akdlm/irc_nas/15791/l_openvino_toolkit_fpga_p_2019.2.275.tgz"
openvino_downloaddir: "/temp/openvino_downloaddir"
openvino_silent_config: "/temp/openvino_downloaddir/silent.cfg"
openvino_install_command: "./install.sh -s silent.cfg" 
openvino_install_dir: "/opt/intel/"
openvino_hddl_dependency_install: "source /opt/intel/openvino/bin/setupvars.sh && ${HDDL_INSTALL_DIR}/install_IVAD_VPU_dependencies.sh"
openvino:
  enabled: false 
#
kube_ovn:
  enabled: false
#
# Enabling biosfw requires syscfg_package.zip to be present in build/biosfw/ directory
biosfw:
  enabled: false

# Enabling SRIOV (image build)
sriov_cni_url: "https://github.com/intel/sriov-cni"
sriov_cni_downloaddir : "/temp/sriov_cni"
sriov_cni_commit: "c9e13c3643e4f7b5b4cd5169a8879ed894b1a07a"

sriov_dev_plugin_url: "https://github.com/intel/sriov-network-device-plugin"
sriov_dev_plugin_downloaddir: "/temp/sriov_dev_plugin"
sriov:
  enabled: false

# Enabling VC-FEC support (image build and SRIOV device creation/binding)
vc_fec_dev_plugin_commit: "bf28fdc3e2d9dd2edcc4f0bceb58448ac9317696"
vc_fec_patch_path: "{{ base_path }}/vc/VC_FEC_SRIOV_DEV_PLUGIN_NODE.patch"
vc_fec:
  enabled: false
vc_vendor_id: "1172"
vc_vf_device_id: "5050"
vc_pf_device_id: "5052"
vc_vf_number: "2"
vc_fec_vf:
  enabled: false

# Build configuration

docker_images_save_path: "{{ base_path }}/dist/"

# Deploy configuration 

packages_to_install: "jq,moreutils,pixman-devel,curl,yum-utils,device-mapper-persistent-data,lvm2,python-pip,libvirt,libvirt-devel,wget,bridge-utils,boost-devel,openssl-devel,pcre-devel,zlib-devel,glib2-devel,autoconf,automake,libtool,flex,bison,git,cmake,pciutils,python-websocket-client,jsoncpp-devel,fcgi-devel,hiredis-devel,numactl-devel,gcc-c++,psmisc,python-httplib2,vim-common"
docker_image_import_location_path: "{{ base_path }}/dist"
docker_syslog_ng_tag: "1.0"
docker_edgednssvr_tag: "1.0"
docker_nts_tag: "1.0"
docker_eaa_tag: "1.0"
docker_appliance_tag: "1.0"
docker_hddlservice_tag: "1.0"
docker_nts_mem_mb_s0: "2048"
# Change the following for two socket NUMA systems
docker_nts_mem_mb_s1: "0"
#
docker_syslog_ng_container_name: "edgenode_syslog-ng_1"
docker_edgednssvr_container_name: "mec-app-edgednssvr"
docker_nts_container_name: "nts"
docker_eaa_container_name: "edgenode_eaa_1"
docker_appliance_container_name: "edgenode_appliance_1"
docker_hddlservice_container_name: "openvino_hddl_service"
#
docker_syslog_ng_container_id: ""
docker_edgednssvr_container_id: ""
docker_nts_tag_container_id: ""
docker_eaa_container_id: ""
docker_appliance_container_id: ""
docker_hddlservice_container_id: ""
#
remote_syslog_ip: "192.168.1.1"
appliance_local_ip: "192.168.122.2"
local_network: "192.168.122.0/25"
local_syslog_ip: "192.168.122.3"
# Change the following for controller ip
enrollment_endpoint: "1.2.3.4:8081"

# Proxy settings
proxy_enable: false
proxy_http: ""
proxy_https: ""
proxy_ftp: ""
proxy_noproxy: "127.0.0.1,localhost"
proxy_yum: ""
