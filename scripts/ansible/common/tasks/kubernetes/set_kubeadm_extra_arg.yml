# Copyright 2019 Intel Corporation and Smart-Edge.com, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Kubernetes - setting KUBELET_EXTRA_ARGS
  lineinfile:
    path: "{{ kubernetes_env_file }}"
    regexp: '^KUBELET_EXTRA_ARGS=(.*)$'
    line: 'KUBELET_EXTRA_ARGS=--runtime-cgroups=/systemd/system.slice --config {{ kubernetes_config_file }}'

- name: Kubernetes - creating Kubelet's config
  blockinfile:
    path: "{{ kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - General"
    create: yes
    block: |
      apiVersion: kubelet.config.k8s.io/v1beta1
      kind: KubeletConfiguration
      KubeletCgroups: "/systemd/system.slice"
      authentication:
        x509:
          clientCAFile: /etc/kubernetes/pki/ca.crt
      clusterDNS:
      - 10.96.0.10
      featureGates:
        TopologyManager: {{ kubernetes_topology_manager['enabled'] }}

- name: Kubernetes - setting Kubelet's config - CPU Manager
  blockinfile:
    path: "{{ kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - CPU Manager"
    block: |
      cpuManagerPolicy: {{ kubernetes_cpu_policy }}
      kubeReserved:
        cpu: "{{ kubernetes_reserved_cpus }}"
    state: "{{ 'present' if kubernetes_cpu_policy == 'static' else 'absent' }}"

- name: Kubernetes - setting Kubelet's config - Topology Manager
  blockinfile:
    path: "{{ kubernetes_config_file }}"
    marker: "# {mark} OpenNESS configuration - Topology Manager"
    block: |
      topologyManagerPolicy: {{ kubernetes_topology_manager['policy'] }}
    state: "{{ 'present' if kubernetes_topology_manager['enabled'] else 'absent' }}"
